---
- hosts: localhost
  become: yes
  gather_facts: false
  vars_files:
    - vars.yml  # Ensure you have a vars.yml file with necessary variables

  tasks:
    # Step 1: Create VPC
    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        cidr_block: "{{ vpc_cidr_block }}"
        name: "{{ vpc_name }}"
        region: "{{ region }}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: present
      register: vpc_result

    # Step 2: Create Internet Gateway
    - name: Create Internet Gateway
      amazon.aws.ec2_vpc_igw:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ igw_name }}"
      register: igw_result

    # Step 3: Create Public Subnet
    - name: Create Public Subnet
      amazon.aws.ec2_vpc_subnet:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        az: "{{ pvtzone }}"
        state: present
        cidr: "{{ pubsubnet_cidr_block }}"
        map_public: yes
        resource_tags:
          Name: "{{ pubsubnet_name }}"
      register: pubsubnet_result

    # Step 4: Create Public Route Table
    - name: Create Public Route Table
      amazon.aws.ec2_vpc_route_table:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ pubroute_table_name }}"
        subnets:
          - "{{ pubsubnet_result.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_result.gateway_id }}"
      register: public_route_table

    # Step 5: Create Security Group
    - name: Create Security Group
      amazon.aws.ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        name: "{{ security_group_name }}"
        description: "Allow all traffic"
        rules:
          - proto: all
            cidr_ip: "0.0.0.0/0"
            rule_desc: "Allow all traffic"
      register: security_group_results

  
